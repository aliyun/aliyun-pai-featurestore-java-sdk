// automatically generated by the FlatBuffers compiler, do not modify

package com.aliyun.openservices.paifeaturestore.datasource;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class UInt8ValueColumn extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static UInt8ValueColumn getRootAsUInt8ValueColumn(ByteBuffer _bb) { return getRootAsUInt8ValueColumn(_bb, new UInt8ValueColumn()); }
  public static UInt8ValueColumn getRootAsUInt8ValueColumn(ByteBuffer _bb, UInt8ValueColumn obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public UInt8ValueColumn __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int value(int j) { int o = __offset(4); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int valueLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector valueVector() { return valueVector(new ByteVector()); }
  public ByteVector valueVector(ByteVector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer valueAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer valueInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createUInt8ValueColumn(FlatBufferBuilder builder,
      int valueOffset) {
    builder.startTable(1);
    UInt8ValueColumn.addValue(builder, valueOffset);
    return UInt8ValueColumn.endUInt8ValueColumn(builder);
  }

  public static void startUInt8ValueColumn(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addValue(FlatBufferBuilder builder, int valueOffset) { builder.addOffset(0, valueOffset, 0); }
  public static int createValueVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createValueVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startValueVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endUInt8ValueColumn(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public UInt8ValueColumn get(int j) { return get(new UInt8ValueColumn(), j); }
    public UInt8ValueColumn get(UInt8ValueColumn obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

